{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lk070/Desktop/level-main/src/app/api/proxy/route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\r\n\r\n// Updated cookies\r\nconst COOKIES = 'cf_clearance=gD0ogJ59zS2hFHTR4CwqHY6vA6qh3CpdQJB6S13b_cQ-1760663786-1.2.1.1-vTj9vrARatAKa8Fv724P3wLzk6H7svnVBCDJVvoPCn_JkuiEOS9J320VdsIa73nr7D2kKsY2SpTKGlhEhQRo6BohT8IWEutfHCrDAiLmj9KmXj518_6YEPy15nCa14TGJqYfyal0g8SNT9.39nKe3NSl0NzZ_HITyIYdvq3Smn1cA5k86L1aJrMSjCVkXyufAAQ6twxDNaerAHM0JvfKAMqpv4BdcuTIFnxPDd_mBfk; cf_chl_rc_ni=1; token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2OGYxMDQzMDViMjY3OGUxNDY2MmVhYjEiLCJ1c2VybmFtZSI6Im5leGxva3NoIiwiaXNBZG1pbiI6ZmFsc2UsImlzU3VwZXJBZG1pbiI6ZmFsc2UsImFjY291bnRFeHBpcmF0aW9uRGF0ZSI6IjIwMjUtMTEtMDVUMTQ6NDE6NTIuMTk3WiIsInN1c3BlbmRlZCI6ZmFsc2UsInNlY3VyaXR5U3RhbXAiOiJlYTI4ZmU4Y2ZkNWI0OTUzMzE1MDY3YzVjNDJiNTZlZiIsIm1heENvbnRhaW5lcnMiOjEsImNvbnRhaW5lclRpbWVMaW1pdEhvdXJzIjpudWxsLCJjb25zdW1lZENvbnRhaW5lclRpbWVTZWNvbmRzIjozNDY2MiwiaWF0IjoxNzYwNjcyNTk2LCJleHAiOjE3NjA2NzYxOTZ9.gVmK4UGRpRaweLNo08jRb1hRaLB7cPiKJ-CI5l0Mw_Y';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const { searchParams } = new URL(request.url);\r\n  const endpoint = searchParams.get('endpoint');\r\n  \r\n  console.log('Proxy API called with endpoint:', endpoint);\r\n  \r\n  if (!endpoint) {\r\n    return new Response(\r\n      JSON.stringify({ error: 'Missing endpoint parameter' }),\r\n      { status: 400, headers: { 'Content-Type': 'application/json' } }\r\n    );\r\n  }\r\n\r\n  try {\r\n    // Map endpoint to actual API URL\r\n    let apiUrl: string;\r\n    switch (endpoint) {\r\n      case 'more-details':\r\n        apiUrl = 'https://www.fflevel.pro/api/docker/more-details';\r\n        break;\r\n      case 'working-status':\r\n        apiUrl = 'https://www.fflevel.pro/api/docker/working-status';\r\n        break;\r\n      default:\r\n        return new Response(\r\n          JSON.stringify({ error: 'Invalid endpoint' }),\r\n          { status: 400, headers: { 'Content-Type': 'application/json' } }\r\n        );\r\n    }\r\n\r\n    console.log('Calling external API:', apiUrl);\r\n    \r\n    // Get the body from the request\r\n    const body = await request.text();\r\n    console.log('Request body:', body);\r\n    \r\n    // Forward the request to the external API\r\n    const response = await fetch(apiUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Cookie': COOKIES,\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',\r\n        'Accept': 'application/json',\r\n        'Referer': 'https://www.fflevel.pro/user-home/dashboard',\r\n        'Origin': 'https://www.fflevel.pro',\r\n      },\r\n      body: body || '{}',\r\n    });\r\n\r\n    console.log('External API response status:', response.status);\r\n    \r\n    // Check if the response is OK\r\n    if (!response.ok) {\r\n      console.error(`External API error: ${response.status} ${response.statusText}`);\r\n      // Try to get error message from response\r\n      let errorMessage = `External API error: ${response.status} ${response.statusText}`;\r\n      try {\r\n        const errorText = await response.text();\r\n        console.log('External API error response:', errorText);\r\n        errorMessage = errorText || errorMessage;\r\n      } catch (e) {\r\n        console.error('Error reading error response:', e);\r\n        // Ignore error when reading error response\r\n      }\r\n      \r\n      return new Response(\r\n        JSON.stringify({ error: errorMessage }),\r\n        { status: response.status, headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n    }\r\n\r\n    // Get the response data\r\n    let data;\r\n    try {\r\n      data = await response.json();\r\n      console.log('External API response data:', JSON.stringify(data, null, 2));\r\n    } catch (jsonError) {\r\n      console.error('Failed to parse JSON response:', jsonError);\r\n      const textResponse = await response.text();\r\n      console.log('Raw response:', textResponse);\r\n      return new Response(\r\n        JSON.stringify({ error: 'Failed to parse JSON response', rawResponse: textResponse }),\r\n        { status: 500, headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n    }\r\n\r\n    // Return the response with proper headers\r\n    return new Response(\r\n      JSON.stringify(data),\r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  } catch (error: any) {\r\n    console.error('Proxy error:', error);\r\n    return new Response(\r\n      JSON.stringify({ error: 'Failed to fetch data from external API', details: error.message || 'Unknown error' }),\r\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\r\n    );\r\n  }\r\n}\r\n\r\n// Handle OPTIONS requests for CORS\r\nexport async function OPTIONS() {\r\n  return new Response(null, {\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n    },\r\n  });\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}